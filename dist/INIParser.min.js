"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const node_fs_1=require("node:fs"),node_os_1=require("node:os");class INIParser{constructor(INIContent,viaGetParser=!1){if(this.result={},!viaGetParser)throw new Error("Can only instantia INIParser via 'INIParser.GetParser()' !");this.content=INIContent,this.parseSelf()}parseSelf(){let line=0,cleanedINI=this.content.split(node_os_1.EOL).filter(line=>0!==line.length&&"\t"!==line).filter(line=>!line.startsWith(";")).map(line=>line.trimEnd().trimStart()).map(line=>line.toLowerCase());const iniBlocks=[];function skip_ini_while(cleanINIContent,predicate){for(var linesBetween=[];;){var ln=function(line){let col=0,tok=[],elm;if(line)for(;!(col>line.length)&&(elm=line[col++])&&";"!==elm&&""!==elm;)tok.push(elm);return tok.join("").trim()}(cleanINIContent[line++]);if(!ln)break;if(!predicate(ln)){--line;break}linesBetween.push(ln)}return linesBetween}const skip_ini_header=cleanINIContent=>skip_ini_while(cleanINIContent,line=>null===line.match(/\[.*?\]/)),skip_ini_pair=cleanINIContent=>skip_ini_while(cleanINIContent,line=>null!==line.match(/\[.*?\]/));function consumeCleanedINI(cleanINIContent){var headers=skip_ini_pair(cleanINIContent),header=(headers[0]||"").slice(1,-1),cleanINIContent=skip_ini_header(cleanINIContent).map(pair=>pair.split("=")),entities=[];for(const pair of cleanINIContent){if(pair.length<2)throw new Error(`Invalid INI pair '${JSON.stringify(pair,null,2)}' in section '${header}'`);const isBool=()=>"true"===pair[1]||"yes"===pair[1]||"false"===pair[1]||"no"===pair[1],isNumber=()=>!Number.isNaN(parseFloat(pair[1])),isDate=()=>!Number.isNaN(Date.parse(pair[1]))&&10<=pair[1].length;entities.push({getKey:()=>pair[0],asString:()=>pair[1],asBoolean:()=>{return isBool()?Boolean("yes"===(iniBool=pair[1])||"no"!==iniBool&&"true"===iniBool):void 0;var iniBool},asNumber:()=>isNumber()?parseFloat(pair[1]):void 0,asDate:()=>isDate()?new Date(pair[1]):void 0,asGuessedNative:()=>{var p1=pair[1];return isDate()?new Date(p1):isNumber()?parseFloat(p1):isBool()?Boolean(p1):p1}})}var block={};Object.defineProperty(block,"__ini_section_name__",{configurable:!1,enumerable:!1,writable:!1,value:header});for(const entity of entities)block[entity.getKey()]=entity;iniBlocks.push(block);headers=(headers||[]).length+cleanINIContent.length;(line=0)!==headers&&(cleanedINI=cleanedINI.slice(headers))}for(;0<cleanedINI.length;)consumeCleanedINI(cleanedINI);for(const block of iniBlocks)this.result[block.__ini_section_name__]=block}get(section,key){if(section in this.result){if(key in this.result[section])return this.result[section][key];throw new Error(`Unknown INI key '${key}' for INI section '${section}'`)}throw new Error(`Unknown INI section '${section}'`)}getKeysForSection(section){if(section in this.result)return Object.keys(this.result[section]);throw new Error(`Unknown INI section '${section}'`)}asJSON(){var obj={};for(const sectionKey of this.getSections()){Object.defineProperty(obj,sectionKey,{writable:!0,enumerable:!0,value:{}});for(const key of this.getKeysForSection(sectionKey))Object.defineProperty(obj[sectionKey],key,{writable:!0,enumerable:!0,value:this.get(sectionKey,key).asGuessedNative()})}return obj}getSections(){return Object.keys(this.result)}}INIParser.GetParser=INIContentOrFilePath=>(0,node_fs_1.existsSync)(INIContentOrFilePath)?new INIParser((0,node_fs_1.readFileSync)(INIContentOrFilePath,"utf-8"),!0):new INIParser(INIContentOrFilePath,!0),exports.default=INIParser;